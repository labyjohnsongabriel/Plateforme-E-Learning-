{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:41:37.871Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:42:23.705Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:51:45.171Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:54:38.782Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:55:49.323Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T18:57:02.780Z"}
{"level":"error","message":"‚ùå MongoDB connection error: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","timestamp":"2025-09-24T19:06:19.025Z"}
{"level":"error","message":"‚ùå MongoDB connection error: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","timestamp":"2025-09-24T19:07:38.440Z"}
{"level":"info","message":"‚úÖ MongoDB Connected: localhost","timestamp":"2025-09-24T19:10:55.834Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-24T19:11:13.299Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-24T19:12:26.403Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-24T19:12:26.409Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-24T19:12:26.410Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-24T19:12:26.415Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-24T19:14:00.962Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-24T19:14:05.973Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-24T19:14:05.979Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-24T19:14:05.980Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-24T19:14:05.987Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-25T04:32:41.345Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-25T04:32:41.351Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-25T04:32:41.352Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-25T04:32:41.385Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-25T04:40:29.561Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-25T11:25:14.533Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-25T11:26:48.757Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-25T11:32:55.606Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-25T11:32:55.616Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-25T11:32:55.617Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-25T11:32:55.698Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-25T15:55:47.044Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-25T15:56:57.558Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-25T15:56:57.566Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-25T15:56:57.567Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-25T15:56:57.571Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T04:45:44.078Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T04:45:44.083Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T04:45:44.083Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T04:45:44.087Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T05:00:08.060Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T05:00:08.065Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T05:00:08.066Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T05:00:08.071Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T15:03:37.736Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T15:14:23.764Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T15:14:23.769Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T15:14:23.770Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T15:14:23.789Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T16:26:53.023Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T16:47:06.290Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T16:47:06.295Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T16:47:06.296Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T16:47:06.300Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T16:55:52.535Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T16:59:10.933Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T16:59:10.940Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T16:59:10.941Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T16:59:10.947Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T17:15:08.500Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T17:15:25.008Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T17:15:25.015Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T17:15:25.016Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T17:15:25.022Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T18:11:21.271Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T18:11:48.488Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T18:11:48.494Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T18:11:48.495Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T18:11:48.500Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:12:41.480Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:14:01.216Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:18:23.428Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T18:18:33.651Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T18:18:57.699Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T18:18:57.704Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T18:18:57.705Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T18:18:57.711Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:19:12.007Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:19:46.428Z"}
{"level":"error","message":"Error: User.findOne is not a function","timestamp":"2025-09-26T18:21:01.656Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T18:25:57.983Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T18:26:12.735Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T18:26:12.740Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T18:26:12.741Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T18:26:12.746Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-26T18:33:09.907Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-26T18:33:15.665Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-26T18:33:15.673Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-26T18:33:15.673Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-26T18:33:15.679Z"}
{"level":"error","message":"Error: User validation failed: role: `ADMINISTRATEUR` is not a valid enum value for path `role`.","timestamp":"2025-09-26T18:50:25.526Z"}
{"level":"error","message":"Error: User validation failed: role: `ADMINISTRATEUR` is not a valid enum value for path `role`.","timestamp":"2025-09-26T18:50:39.941Z"}
{"level":"error","message":"Error: User validation failed: role: `APPRENANT` is not a valid enum value for path `role`.","timestamp":"2025-09-26T18:51:32.781Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T02:14:58.633Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T02:14:58.644Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T02:14:58.645Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T02:14:58.662Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-27T02:45:19.361Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T02:45:31.197Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T06:05:55.078Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T06:05:55.083Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T06:05:55.084Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T06:05:55.088Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T07:47:48.596Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T07:47:48.604Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T07:47:48.606Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T07:47:48.614Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-27T09:18:06.564Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T09:22:27.230Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T09:22:27.239Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T09:22:27.241Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T09:22:27.248Z"}
{"level":"error","message":"Error: User validation failed: role: Path `role` is required.","timestamp":"2025-09-27T09:41:23.182Z"}
{"level":"error","message":"Error: User validation failed: role: Path `role` is required.","timestamp":"2025-09-27T09:42:21.929Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-27T09:42:26.862Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T09:42:32.561Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T09:42:32.567Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T09:42:32.568Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T09:42:32.572Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-27T15:10:05.211Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T15:10:19.132Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:27:07.110Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:31:42.697Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:35:41.603Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:38:37.852Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:39:24.005Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:40:48.691Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-27T18:41:58.303Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-27T18:43:46.352Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-27T18:43:46.358Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-27T18:43:46.359Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-27T18:43:46.363Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T04:18:35.066Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T04:18:45.088Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T04:52:15.326Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T04:57:46.666Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-28T04:57:46.676Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-28T04:57:46.678Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-28T04:57:46.688Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T05:31:20.733Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-28T05:31:20.740Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-28T05:31:20.740Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-28T05:31:20.746Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T07:16:04.749Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T07:16:15.551Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T07:25:59.758Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T07:35:46.415Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-28T07:35:46.423Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-28T07:35:46.424Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-28T07:35:46.431Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T07:46:14.127Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T07:46:24.726Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T08:15:18.550Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T08:15:28.571Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:30:45.181Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T08:31:48.048Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T08:32:09.117Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-28T08:32:09.122Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-28T08:32:09.123Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-28T08:32:09.127Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:32:12.069Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:32:22.729Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:32:22.757Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:37:25.043Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:37:25.077Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:39:28.848Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:39:28.874Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:45:50.729Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:45:50.898Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:59:13.106Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T08:59:14.430Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T09:33:06.657Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T09:33:07.627Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T09:33:33.575Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T09:33:34.126Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:29:26.578Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:29:26.596Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:30:13.905Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:30:13.934Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:32:10.548Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T10:32:10.557Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T11:00:09.149Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T11:00:11.110Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-28T16:32:35.026Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-28T16:33:05.931Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T17:12:10.872Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T17:12:11.190Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T18:48:38.731Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T18:48:38.849Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T18:50:40.874Z"}
{"level":"error","message":"Error: Cast to ObjectId failed for value \"domaine\" (type string) at path \"_id\" for model \"Cours\"","timestamp":"2025-09-28T18:50:40.889Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T03:19:09.767Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T03:19:09.776Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T03:19:09.779Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T03:19:09.823Z"}
{"level":"error","message":"Error fetching courses: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:17.698Z"}
{"level":"error","message":"Error: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:17.705Z"}
{"level":"error","message":"Error fetching courses: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:17.820Z"}
{"level":"error","message":"Error: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:17.823Z"}
{"level":"error","message":"Error fetching courses: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:47.328Z"}
{"level":"error","message":"Error: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:47.339Z"}
{"level":"error","message":"Error fetching courses: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:47.397Z"}
{"level":"error","message":"Error: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:21:47.411Z"}
{"level":"error","message":"Error fetching courses: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:41:39.601Z"}
{"level":"error","message":"Error: Cannot populate path `domaineId` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2025-09-29T03:41:39.684Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T03:42:17.280Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T03:42:38.061Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T03:42:38.068Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T03:42:38.069Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T03:42:38.100Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T04:57:17.016Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T04:57:17.027Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T04:57:17.029Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T04:57:17.043Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T10:15:27.605Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T10:15:38.476Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T12:05:22.880Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T12:05:22.887Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T12:05:22.888Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T12:05:22.895Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T14:15:47.576Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T14:15:58.691Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T15:06:06.520Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T15:06:16.539Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T18:25:46.555Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T18:25:46.561Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T18:25:46.562Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T18:25:46.566Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T18:28:00.545Z"}
{"level":"info","message":"Mongoose connected to DB","timestamp":"2025-09-29T18:29:31.845Z"}
{"level":"info","message":"MongoDB connected successfully","timestamp":"2025-09-29T18:29:31.861Z"}
{"level":"info","message":"MongoDB connected via config/database.js","timestamp":"2025-09-29T18:29:31.862Z"}
{"level":"info","message":"üöÄ Server running on port 3000","timestamp":"2025-09-29T18:29:31.869Z"}
{"level":"warn","message":"Mongoose disconnected from DB","timestamp":"2025-09-29T18:37:54.215Z"}
